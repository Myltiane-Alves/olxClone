{"ast":null,"code":"import Cookies from 'js-cookie';\nimport qs from 'qs';\nconst BASEAPI = 'http://alunos.b7web.com.br:501/';\n\nconst apiFetchFile = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.append('token', token);\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    body\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchGet = async (endpoint, body = []) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst OlxAPI = {\n  login: async (email, password) => {\n    const json = await apiFetchPost('/user/signin', {\n      email,\n      password\n    });\n    return json;\n  },\n  register: async (name, email, password, stateLoc) => {\n    const json = await apiFetchPost('/user/signup', {\n      name,\n      email,\n      password,\n      state: stateLoc\n    });\n    return json;\n  },\n  getStates: async () => {\n    const json = await apiFetchGet('/states');\n    return json.states;\n  },\n  getCategories: async () => {\n    const json = await apiFetchGet('/categories');\n    return json.categories;\n  },\n  getAds: async options => {\n    const json = await apiFetchGet('/ad/list', options);\n    return json;\n  },\n  getAd: async (id, other = false) => {\n    const json = await apiFetchGet('/ad/item', {\n      id,\n      other\n    });\n    return json;\n  },\n  addAd: async fData => {\n    const json = await apiFetchFile('/ad/add', fData);\n    return json;\n  }\n};\nexport default (() => OlxAPI);","map":{"version":3,"sources":["C:/Users/Myltiane/olx/frontend/src/helpers/OlxAPI.js"],"names":["Cookies","qs","BASEAPI","apiFetchFile","endpoint","body","token","get","append","res","fetch","method","json","notallowed","window","location","href","apiFetchPost","headers","JSON","stringify","apiFetchGet","OlxAPI","login","email","password","register","name","stateLoc","state","getStates","states","getCategories","categories","getAds","options","getAd","id","other","addAd","fData"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\nimport qs from 'qs';\n\nconst BASEAPI = 'http://alunos.b7web.com.br:501/';\n\nconst apiFetchFile = async (endpoint, body) => {\n    if(!body.token) {\n        let token = Cookies.get('token');\n        if(token) {\n            body.append('token', token);\n        }\n    }\n    const res = await fetch(BASEAPI+endpoint, {\n        method:'POST',\n        body\n    });\n    const json = await res.json();\n    \n    if(json.notallowed) {\n        window.location.href = '/signin';\n        return;\n    }\n\n    return json;\n}\nconst apiFetchPost = async (endpoint, body) => {\n    if(!body.token) {\n        let token = Cookies.get('token');\n        if(token) {\n            body.token = token;\n        }\n    }\n    const res = await fetch(BASEAPI+endpoint, {\n        method:'POST',\n        headers:{\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body:JSON.stringify(body)\n    });\n    const json = await res.json();\n\n    if(json.notallowed) {\n        window.location.href = '/signin';\n        return;\n    }\n\n    return json;\n}\nconst apiFetchGet = async (endpoint, body = []) => {\n    if(!body.token) {\n        let token = Cookies.get('token');\n        if(token) {\n            body.token = token;\n        }\n    }\n    const res = await fetch(`${BASEAPI+endpoint}?${qs.stringify(body)}`);\n    const json = await res.json();\n\n    if(json.notallowed) {\n        window.location.href = '/signin';\n        return;\n    }\n\n    return json;\n}\n\nconst OlxAPI = {\n\n    login:async (email, password) => {\n        const json = await apiFetchPost(\n            '/user/signin',\n            {email, password}\n        );\n        return json;\n    },\n\n    register:async (name, email, password, stateLoc) => {\n        const json = await apiFetchPost(\n            '/user/signup',\n            {name, email, password, state:stateLoc}\n        );\n        return json;\n    },\n\n    getStates:async () => {\n        const json = await apiFetchGet(\n            '/states'\n        );\n        return json.states;\n    },\n\n    getCategories:async () => {\n        const json = await apiFetchGet(\n            '/categories'\n        );\n        return json.categories;\n    },\n\n    getAds:async (options) => {\n        const json = await apiFetchGet(\n            '/ad/list',\n            options\n        );\n        return json;\n    },\n\n    getAd:async (id, other = false) => {\n        const json = await apiFetchGet(\n            '/ad/item',\n            {id, other}\n        );\n        return json;\n    },\n\n    addAd:async (fData) => {\n        const json = await apiFetchFile(\n            '/ad/add',\n            fData\n        );\n        return json;\n    }\n\n};\n\nexport default () => OlxAPI;"]},"metadata":{},"sourceType":"module"}